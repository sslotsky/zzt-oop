%{
open SyntaxTree
%}

%start start

%token <string> STRING
%token <string> ID
%token MY_NAME_IS
%token MOVE GO WALK
%token IF THEN ELSE UNLESS SET CLEAR
%token ALIGNED TOUCHING BLOCKED ENERGIZED
%token NORTH SOUTH EAST WEST SEEK FLOW CW CCW RNDP OPP
%token ON DO END
%token ANNOUNCE
%token SHOOT
%token EOF

%type < SyntaxTree.Command list > start

%%

start: script { $1 }

script:
	| commandList { $1 }

commandList:
	| command { [$1] }
	| command commandList { $1::$2 }

command:
	| move { $1 }
	| go { $1 }
	| walk { $1 }
	| shoot { $1 }
	| name { $1 }
	| announce { $1 }
	| on { $1 }
	| set { $1 }
	| clear { $1 }
	| conditional { $1 }

set:
	| SET flag { Set $2 }

clear:
	| CLEAR flag { Clear $2 }

conditional:
	| IF flag THEN commandList END { If($2, $4) }
	| command IF flag { If($3, [$1]) }
	| IF flag THEN commandList ELSE commandList END { IfElse($2, $4, $6) }
	| UNLESS flag DO commandList END { Unless($2, $4) }
	| command UNLESS flag { Unless($3, [$1]) }

flag:
	| ALIGNED { Aligned }
	| TOUCHING { Touching }
	| BLOCKED direction { Blocked $2 }
	| ENERGIZED { Energized }
	| userDefined { UserDefined $1 }

userDefined:
	| ID { FlagName $1 }

move:
	| MOVE direction { Move $2 }

go:
	| GO direction { Go $2 }

walk:
	| WALK direction { Go $2 }

shoot:
	| SHOOT direction { Shoot $2 }

name:
	| MY_NAME_IS STRING { Name $2 }

announce:
	| ANNOUNCE STRING { Announce $2 }

on:
	| ON STRING DO commandList END { On($2, $4) }

direction:
	| NORTH { North }
	| SOUTH { South }
	| EAST { East }
	| WEST { West }
	| SEEK { Seek }
	| FLOW { Flow }
	| CW direction { Clockwise $2 }
	| CCW direction { CounterClockwise $2 }
	| RNDP direction { RandomPerpendicular $2 }
	| OPP direction { Opposite $2 }
